name: Create Release

on:
  milestone:
    types: [closed]

permissions:
  contents: write

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Determine current version
        id: set_version
        run: |
          NEW_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Building for version: ${NEW_VERSION}"
          echo "version=${NEW_VERSION}" >> $GITHUB_OUTPUT
  release:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Check version format
        run: |
          if [[ "${{ needs.version.outputs.version }}" != *"-SNAPSHOT"* ]]; then
            echo "Release version is correct (does not contain -SNAPSHOT)"
          else
            echo "::error::Release version should not contain -SNAPSHOT"
            exit 1
          fi
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '24'
          architecture: x64
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "gjong@users.noreply.github.com"
      - name: Set release version
        run: |
          mvn versions:set versions:commit -DremoveSnapshot -q
          git add .
          git commit -m "chore: prepare release ${{ needs.version.outputs.version }}"
          git push
      - name: Tag release
        run: |
          TAG_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          git tag ${TAG_VERSION}
          git push origin ${TAG_VERSION}
      - name: Prepare next build phase
        run: |
          mvn versions:set versions:commit -DnextSnapshot -q
          git add .
          git commit -m "chore: prepare snapshot version ${{ needs.version.outputs.version }}"
          git push
