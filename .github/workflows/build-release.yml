name: Create Release

on:
  push:
    branches: [main]

jobs:
  version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Determine current version
        id: set_version
        run: |
          NEW_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Building for version: ${NEW_VERSION}"
          echo "version=${NEW_VERSION}" >> $GITHUB_OUTPUT
  release:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '24'
          architecture: x64
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      - name: Set release version
        run: |
          mvn versions:set -DremoveSnapshot
          git add .
          git commit -m "chore: prepare for release ${{ needs.version.outputs.version }}"
#
#      - name: Configure Git
#        run: |
#          git config user.name "GitHub Actions"
#          git config user.email "actions@github.com"
#
#      - name: Set release version
#        run: |
#          mvn versions:set -DnewVersion=${{ github.event.inputs.releaseVersion }}
#          git add pom.xml
#          git commit -m "chore: prepare release ${{ github.event.inputs.releaseVersion }}"
#          git push
